$(".footer-nav__show").click(function () {
    if(window.innerWidth <= 576){
        $(this).parents(".footer-nav").toggleClass("_open")
        $(this).siblings(".footer-nav__hidden").slideToggle()
    }
})

$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    console.log(parentBlock)
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").removeClass("_active")
    $(parentBlock).find(`.${tabId}`).addClass("_active")
})

function setLabelPlace(){
    let fields = document.querySelectorAll(".fg input,.fg-dynamic select")

    fields.forEach(field => {
        setLabelPosition(field)

        field.oninput = ()=> {
            setLabelPosition(field)
        }

        function setLabelPosition() {
            if(field.value !== ""){
                field.classList.add("_filled")
            } else{
                field.classList.remove("_filled")
            }
        }
    })
}


setLabelPlace()

$(".fg__clear").click(function () {
    $(this).siblings("input").val("")
    $(this).siblings("input").trigger("input");
})

$("._toggle-burger-menu").click(function () {
    $(".header").toggleClass("_open")
    $("body").toggleClass("fixed-body")
})

$(".lang__show").click(function () {
    $(this).parents(".lang").toggleClass("_open")
})

$(document).mouseup( function(e){
    var div = $( ".lang" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_open")){
            $(div).removeClass("_open")
        }
    }
});

function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll("._slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`._slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,
            navigation: {
                nextEl: `._slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `._slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `._slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

function runningLineSliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll("._line-slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let reverse = false
        if(slider.classList.contains("_reverse")){
            reverse = true
        }

        SlidersArray[index] = new Swiper(`._line-slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            speed: 3000,
            loop: true,
            loopAdditionalSlides: 10,
            allowTouchMove: false,
            autoplay: {
                delay: 0,
                disableOnInteraction: false,
                reverseDirection: reverse
            }
        })


    })
}

function modalTabsSliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".modal__tabs")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.modal__tabs[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,
            on: {
                init: function () {
                    let activeTab = $(slider).find(".tab._active")
                    this.slideTo($(activeTab).parents(".swiper-slide").index())
                },
            },
        })
    })
}

Sliders()
runningLineSliders()
modalTabsSliders()

$("._show-all-reviews").click(function () {
    $(this).parents(".reviews").find(".reviews-slider").addClass("_show-all")
    $(this).hide()
})

$(".team-card").mouseover(function () {
    if(window.innerWidth > 992){
        $(this).addClass("_flip-over")
    }
})

$(".team-card").mouseout(function () {
    if(window.innerWidth > 992){
        $(this).removeClass("_flip-over")
    }
})

$(".team-card").click(function () {
    if(window.innerWidth <= 992){
        $(this).toggleClass("_flip-over")
    }
})

$("._search-field").on("input",function () {
    if($(this).val().length > 3){
        $(this).parents(".m-search").addClass("_show")
    }
})

$(".m-search__clear").click(function () {
    $(this).parents(".m-search").find("._search-field").val('')
    $(this).parents(".m-search").removeClass("_show")
})

$(document).mouseup( function(e){
    var div = $( ".m-search" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_show")){
            $(div).removeClass("_show")
        }
    }
});

$(".filter-select__show").click(function () {
    $(this).parents(".m-select").toggleClass("_open")
})

$(document).mouseup( function(e){
    var div = $( ".m-select" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_open")){
            $(div).removeClass("_open")
        }
    }
});

$(".m-dropdown__option[data-value]").click(function () {
    $(this).siblings(".m-dropdown__option").removeClass("_selected")
    $(this).addClass("_selected")

    setDropdownActiveField($(this).parents(".m-select"))
    $(this).parents(".m-select").find(".m-select__input").trigger("change");
    $(this).parents(".m-select").removeClass("_open")
})


$(".m-select").each(function (i,select) {
    setDropdownActiveField(select)
})

function setDropdownActiveField(select) {
    let activeOption = $(select).find(".m-dropdown__option._selected").attr("data-value")

    $(select).find(".m-select__current").html(activeOption)
    $(select).find(".m-select__input").val(activeOption)
}

$("._toggle-filter").click(function () {
    $(this).parents(".m-filter").toggleClass("_open")
    if(window.innerWidth <= 576){
        $("body").toggleClass("fixed-body")
    }
})

$(document).mouseup( function(e){
    var div = $( ".m-filter" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_open")){
            $(div).removeClass("_open")
        }
    }
});

$(window).scroll(function(){
    var $sections = $('.news-article [id]');
    $sections.each(function(i,el){
        var top  = $(el).offset().top-100;
        var bottom = top +$(el).height();
        var scroll = $(window).scrollTop();
        var id = $(el).attr('id');
        if( scroll > top && scroll < bottom){
            $('.news-nav__link._active').removeClass('_active');
            $('.news-nav__link[href="#'+id+'"]').addClass('_active');
        }
    })
});

$(document).on("click",".news-nav__link", function (event) {
    event.preventDefault();

    var id  = $(this).attr('href'),
        top = $(id).offset().top;

    $('body,html').animate({scrollTop: top}, 0);
});


$(".news-nav__show").click(function () {
    $(".news-nav").toggleClass("_active")
    $(this).siblings(".news-nav__hidden").slideToggle()
})

$(".authors__btn").click(function () {
    $(this).parents(".authors").toggleClass("_show-all")
})

$(".survey").each(function (index,survey) {
    let startSurveyBtn = $(survey).find("._start-survey")
    let prevBtn = $(survey).find("._prev-question")
    let nextBtn = $(survey).find("._next-question")
    let paginationCurrent = $(survey).find(".survey__pagination ._current")
    let paginationAll = $(survey).find(".survey__pagination ._all")
    let questionsCount = $(survey).find(".survey-item[data-step]").length

    $(startSurveyBtn).click(function () {
        $(survey).addClass("_survey-started")
        setStep(1)
    })

    $(nextBtn).click(function () {
        let currentStep = +$(survey).find(`.survey-item._active`).attr("data-step")
        if(currentStep < questionsCount){
            setStep(currentStep+1)
        } else{
            $(survey).find(`.survey-item`).removeClass("_active")
            $(survey).find(`.survey-last`).addClass("_active")
            $(survey).removeClass("_survey-started")
        }

        if (currentStep === 1){
            $(prevBtn).removeClass("_disabled")
        }
    })

    $(prevBtn).click(function () {
        let currentStep = +$(survey).find(`.survey-item._active`).attr("data-step")
        if(currentStep > 1){
            setStep(currentStep-1)
        } else{
            $(survey).find(`.survey-item`).removeClass("_active")
            $(survey).find(`.survey-start`).addClass("_active")
            $(survey).removeClass("_survey-started")
            $(prevBtn).addClass("_disabled")
        }
    })


    function setStep(id) {
        $(survey).find(`.survey-item`).removeClass("_active")
        $(survey).find(`.survey-item[data-step="${id}"]`).addClass("_active")

        $(paginationCurrent).html(id)
    }

    $(paginationAll).html(questionsCount)
})









$(".qa-card__show").click(function () {
    $(this).parents(".qa-card").toggleClass("_active")
    $(this).siblings(".qa-card__hidden").slideToggle()
})

$("._toggle-program-modal").click(function () {
    $(this).parents(".edu-group").toggleClass("_active")
    $("body").toggleClass("fixed-body")
})

$(document).mouseup( function(e){
    var div = $( ".program-modal__dialog" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).parents(".edu-group").hasClass("_active")){
            $(div).parents(".edu-group").removeClass("_active")
            $("body").removeClass("fixed-body")
        }
    }
});

$(".useful-info__btn").click(function () {
    $(this).parents(".useful-info").toggleClass("_show-all")
})


$(".table-select__show").click(function () {
    $(this).parents(".m-select").toggleClass("_open")
})


$(".table-select .m-dropdown__option[data-value]").click(function () {
    let tabId = $(this).attr("data-tab")
    let parent = $(this).parents(".m-table")

    $(this).siblings(".m-dropdown__option").removeClass("_selected")
    $(this).addClass("_selected")

    setDropdownActiveField($(this).parents(".m-select"))
    $(this).parents(".m-select").find(".m-select__input").trigger("change");
    $(this).parents(".m-select").removeClass("_open")

    $(parent).find("tr").removeClass("_active")
    $(parent).find(`tr[data-tab="${tabId}"]`).addClass("_active")
})


$(".anti-corruption__tab").click(function () {
    let tabId = $(this).attr("data-tab")
    let parent = $(this).parents(".anti-corruption")
    $(parent).addClass("_open-level2")
    $(parent).find(".anti-corruption__content").removeClass("_active")
    $(parent).find(`.anti-corruption__content[data-tab="${tabId}"]`).addClass("_active")
})

$(".anti-corruption__back").click(function () {
    let parent = $(this).parents(".anti-corruption")
    $(parent).removeClass("_open-level2")
})

let maps = document.querySelectorAll("[data-cord1]")

if(maps.length !== 0){
    ymaps.ready(init);
}




function init(){
    maps.forEach(map=> {
        createMap(map)
    })

    function createMap(map){
        let cord = [+map.dataset.cord1, +map.dataset.cord2]

        let myMap = new ymaps.Map(map, {
            center: cord,
            zoom: 17,
            controls: ['zoomControl']
        });
        myMap.behaviors.disable('scrollZoom');

        let placeMark = new ymaps.Placemark(cord, {},
            {
                iconLayout: 'default#image',
                iconImageHref: "img/mark.svg",
                iconImageSize: [56, 56],
            }
        );
        myMap.geoObjects.add(placeMark);
    }
}

$("._file-upload input").change(function (e) {
    const [file] = e.target.files
    let fileName = file.name
    let fileContainer = $(this).parents(".files")
    $(this).parents(".files").addClass("_uploaded")
    if(!$(this).prop("multiple")){
        $(fileContainer).find(".file").remove()
    }
    $(fileContainer).prepend(
        `
        <div class="file">
            <span>${fileName}</span>
        </div>
        `
    )
})


let body = document.querySelector(".m-page")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")

        if(modalId === "reviewModal"){
            $(".review-modal__text").html(el.innerHTML)
        }

        openModal(modalId)
    }
})

document.addEventListener('keydown', function(e) {
    if( e.keyCode == 27 ){
        closeModals()
    }
});

document.addEventListener( 'click', (e) => {
    // modals.forEach(modal => {
    //     const withinBoundaries = e.composedPath().includes(modal);
    //     if ( ! withinBoundaries ) {
    //         if(modal.classList.contains("_active")){
    //             modal.classList.remove("_active")
    //             body.classList.remove("fixed-body2")
    //         }
    //     }
    // })

})

function closeModals() {
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body2")
    })
}

function openModal(modalId) {
    closeModals()
    let modal = document.querySelector(`#${modalId}`)
    let modalDialog = modal.querySelector(`.modal__dialog`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })

    $(document).mouseup( function(e){
        var div = $(`#${modalId}`).find(".modal__dialog");
        if ( !div.is(e.target)
            && div.has(e.target).length === 0 ) {
            if(modal.classList.contains("_active")){
                modal.classList.remove("_active")
                body.classList.remove("fixed-body2")
            }
        }
    });
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()

    $(".international-phone").intlTelInput({
        initialCountry: 'ru',
        utilsScript: "js/utils.js"
    });
})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
